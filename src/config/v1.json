{"description":"Describes Version 1 of the top-level Configuration that the Hypergres core\naccepts. Until the official release of Hypergres Version 1, this format is\nsubject to change.","type":"object","properties":{"version":{"type":"string","enum":["v1"]},"providers":{"description":"A list of Provider configurations to instantiate during Core\ninitialisation.","type":"array","items":{"$ref":"#/definitions/Provider"}},"authentication":{"description":"Authentication configuration(s) to apply to all exposed Actions. May be\n`false` to explicitly disable authentication, or an Authentication\nconfiguration.","anyOf":[{"$ref":"#/definitions/Authentication"},{"enum":[false],"type":"boolean"}]},"server":{"type":"object","properties":{"port":{"type":"number"}},"required":["port"]}},"required":["authentication","providers","server","version"],"definitions":{"Provider":{"description":"Describes a Provider configuration.","type":"object","properties":{"id":{"description":"Each Provider must specific a unique identifying name.","type":"string"},"driver":{"description":"The type of Provider to instantiate. Currently, only the `postgresql`\ndriver is supported.","type":"string","enum":["postgresql"]},"options":{"$ref":"#/definitions/Config","description":"Connection options to pass to the Driver on instantiation. Currently, only\nconfiguration options accepted by pg-promise are supported."},"discovery":{"description":"Automatic Source discovery options. Currently, only discovery rules\naccepted by the PostgreSQL driver are supported.","type":"array","items":{"$ref":"#/definitions/Config_1"}}},"required":["discovery","driver","id","options"]},"Config":{"description":"Describes the configuration parameters that the PostgreSQL data provider\naccepts.","type":"object","properties":{"host":{"description":"The hostname (or path to a Unix socket) of the PostgreSQL server to connect\nto.","type":"string"},"port":{"description":"The TCP port of the PostgreSQL server to connect to.","type":"number"},"user":{"description":"The username to use for authentication.","type":"string"},"password":{"description":"The password to use for authentication.","type":"string"},"database":{"description":"The name of the Database to connect to.","type":"string"}},"required":["database","host","password","port","user"]},"Config_1":{"description":"Represents the discovery configuration parameters that `inspect` accepts.","type":"object","properties":{"schemas":{"description":"Controls the discovery scope to a list of Schemas.","anyOf":[{"type":"object","properties":{"only":{"type":"array","items":{"type":"string"}}},"required":["only"]},{"type":"object","properties":{"except":{"type":"array","items":{"type":"string"}}},"required":["except"]},{"enum":[true],"type":"boolean"}]},"tables":{"description":"Controls the discovery scope regarding Tables. If omitted, no Tables will\nbe enumerated.","anyOf":[{"type":"object","properties":{"only":{"type":"array","items":{"type":"string"}}},"required":["only"]},{"type":"object","properties":{"except":{"type":"array","items":{"type":"string"}}},"required":["except"]},{"enum":[true],"type":"boolean"}]},"views":{"description":"Controls the discovery scope regarding Views. If omitted, no Tables are\ninspected. If `true`, all Tables are inspected. If a list of Table names,\nonly Tables with those names are inspected.","anyOf":[{"type":"object","properties":{"only":{"type":"array","items":{"type":"string"}}},"required":["only"]},{"type":"object","properties":{"except":{"type":"array","items":{"type":"string"}}},"required":["except"]},{"enum":[true],"type":"boolean"}]},"actions":{"description":"A list of Actions that should be configured against the Source\nconfigurations that are created for the discovered entities.","type":"array","items":{"type":"string"}},"options":{"$ref":"#/definitions/Options","description":"Discovery options that should be applied when creating a Source\nconfiguration from enumerated entities."}},"required":["actions","schemas"]},"Options":{"description":"Represents the discovery options that should be applied when creating Source\nconfigurations from enumerated entities.","type":"object","properties":{"strictNumbers":{"description":"Prevents strings from being considered a valid input on numerical columns.","type":"boolean"}}},"Authentication":{"description":"Describes the Authentication parameters for a Hypergres server.","type":"object","properties":{"strategy":{"description":"The Strategy to use for generating and parsing credentials. Currently, only\nthe `jwt` strategy is supported, which parses JSON Web Tokens from the\n`Authorization` HTTP Header.","type":"string","enum":["jwt"]},"adapter":{"description":"The Adapter to use for verifying credentials passed by the associated\nStrategy. Currently, only the `source` adapter is supported, which performs\na lookup against a data Source.","type":"string","enum":["source"]}},"required":["adapter","strategy"]}},"$schema":"http://json-schema.org/draft-04/schema#"}
